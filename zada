using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace InsertSort
{
    public partial class Form1 : Form
    {
        public void InsertSort(int[] tab)
        {
            int a;
            for (int i = 1; i < tab.Length; i++)
            {
                for (int j = i; j > 0; j--)
                {
                    if (tab[j - 1] > tab[j])
                    {
                        a = tab[j - 1];
                        tab[j - 1] = tab[j];
                        tab[j] = a;
                    }
                    else break;
                }
            }
        }

        public void MergeSort(int[] tab, int p, int r)
        {
            if (p < r)
            {
                int q = (p + r) / 2;
                MergeSort(tab, p, q);
                MergeSort(tab, q + 1, r);
                Scal(tab, p, q, r);
            }
        }

        public void Scal(int[] tab, int p, int q, int r)
        {
            // dokonczyc to i zrobic program (bubble, insert, counting, merge, quick)
        }

        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            string text = textBox1.Text;
            int[] tab = new int[text.Length];
            char a;
            int b;
            char[] output = new char[text.Length];
            for (int i = 0; i < text.Length; i++)
            {
                a = text[i];
                tab[i] = a - '0';
            }
            InsertSort(tab);
            for (int i = 0; i < text.Length; i++)
            {
                b = tab[i] + (int)'0';
                a = (char)b;
                output[i] = a;
            }
            string output2 = new string(output);
            MessageBox.Show($"Lista przed sortowaniem: {text}\nLista po sortowaniu: {output2}");
        }
    }
}
